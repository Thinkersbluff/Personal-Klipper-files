# Creality CR-6 SE specific configuration
# Last modified: 8 Nov 2022
# 
# NOTES:
# 1. This file contains configs and macros specifically tuned for my CR6-SE
#    Anyone else using this file will need to review and modify these contents to suit themselves
#
# 2. EITHER: Printer.cfg MUST contain the line "Include CR6.cfg"
#        OR: The contents of this file must be copy/pasted into Printer.cfg AND that include statement commented-out
#
# 3.Test conditions, parameters, and commands can be included in MACROS. 
#     See https://jinja.palletsprojects.com/en/3.0.x/templates/ for the syntax
#     See https://www.klipper3d.org/Command_Templates.html for Macro command tips and guidelines

#####################################################
#####################   CONFIGS   ####################
#####################################################

[bed_mesh]
speed: 120
horizontal_move_z: 2
mesh_min: 10,10
mesh_max: 220,220
probe_count: 4    # probe a 4x4 grid
mesh_pps: 3   # interpolate three additional mesh points between each pair of probed points, in both x and y
algorithm: lagrange 
move_check_distance: 5  # check whether abl should adjust z height, every 5mm of horizontal travel, while printing
split_delta_z: .015  #adjust z height if abl mesh height differs from previus location by more than this amount
fade_start: 1  # apply full bed mesh compensation for first 1mm of printing
fade_end: 10  # Then begin to reduce that correction linearly, until it is reduced to fade_taget at Z=10mm
fade_target: 0

[safe_z_home]
home_xy_position: 117.5,117.5
speed: 100
z_hop: 5

[stable_z_home]
# description:
# This macro requires cloning a .py module (stable_z_home.py) into ~/klipper/klippy/extras
# I found it here: https://github.com/matthewlloyd/Klipper-Stable-Z-Home
# I use it to replace G28 Z in the START_PRINT macro, to reduce the risk of random mechanical issues causing a "bad" Home offset in Z 
gcode:
#  The G-code to run before each probe attempt. The default is none.
retries: 10
#  The maximum number of probe attempts allowed. The default is 20.
window: 4
#  The number of samples to use in the tolerance window. The default is 4.
retry_tolerance: 0.015
#  The maximum range between the min and max values of the Z offset in the window
#  to consider the offset stable and complete the procedure. The default is 0.0025mm.
#  My CR6 probe system seems to be incapable of achieving better than 0.015mm repeatability.
#  I am told (still looking for a reference) that it is actually only specified accurate to 0.02mm, so not surprising.

[force_move]
enable_force_move: True  # not sure why is set to True. 

#####################################################
############   END OF CONFIGS   ####################
#####################################################


#####################################################
#####################   MACROS   ####################
#####################################################

######################################################################
# Filament Change at Layer/Height (M600)
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro TARE_PROBE]
description: Tare probe once
gcode:
  SET_PIN PIN=probe_tare VALUE=0
  G4 P250
  SET_PIN PIN=probe_tare VALUE=1
  G4 P250
  {action_respond_info("Probe tared")}

[gcode_macro RUN_ABL_COLD]
description: Run G29 with all heaters off. Save result as the DEFAULT profile.: 
gcode:
	G28
	M140 S0
	M104 S0
	BED_MESH_CALIBRATE PROFILE=<DEFAULT>
	SAVE_CONFIG

[gcode_macro RUN_ABL_BED_60]
description: Run G29 with bed at 60C. Save result as the BED_MESH_PLA profile.
gcode:
  G28
  G90
  G0 Z20
  G0 X0 Y0 F3500
  M104 S0  #Ignore any nozzle expansion factor until homing before print. Make sure nozzle is clean before probing, though!
  M190 S60 # Heat bed before proceeding

# Heat-soak bed for 5 minutes, before probing
  G4 P300000

  BED_MESH_CALIBRATE PROFILE=<BED_MESH_PLA>
  SAVE_CONFIG
  M140 S0 #Turn off bed heater, when finished

[gcode_macro RUN_ABL_BED_80]
description: Run G29 with bed at 80C. Save result as the BED_MESH_PETG profile.
gcode:
  G28
  G90
  G0 Z20
  G0 X0 Y0 F3500
  M140 S80
  M104 S0   #Ignore any nozzle expansion factor until homing before print. Make sure nozzle is clean before probing, though!
  M190 S80  # Heat bed before proceeding

# Heat-soak bed for 5 minutes, before probing
  G4 P300000

  #G28
  BED_MESH_CALIBRATE PROFILE=<BED_MESH_PETG>
  SAVE_CONFIG
  M140 S0 #Turn off bed heater, when finished

[gcode_macro START_PRINT]
# put the following in the Cura start code and remove everything else: (Remove the # marks, if you copy/paste these lines!)
# ;Nozzle diameter = {machine_nozzle_size}
# ;Filament type = {material_type}
# ;Filament name = {material_name}
# ;Filament weight = {filament_weight}
# ; M190 S{material_bed_temperature_layer_0}
# ; M109 S{material_print_temperature_layer_0}
# start_print HOTEND_TEMP={material_print_temperature_layer_0} BED_TEMP={material_bed_temperature_layer_0}
description: Set printer config parameters. Load BED_MESH profile and Z Offset based on nozzle target temperature.
gcode:
	{% set toolTemp = params.HOTEND_TEMP|int %}
	{% set bedTemp = params.BED_TEMP|int %}
	M82 								# absolute extrusion mode
	M220 S100 							# Reset Feedrate
	M221 S100 							# Reset Flowrate
	SET_VELOCITY_LIMIT VELOCITY=200 ACCEL=3000 ACCEL_TO_DECEL=750 SQUARE_CORNER_VELOCITY=5
    {% if bedTemp >= 50 %}            # If printing PLA, do these things... If printing other materials also, put equivalent higher temp ifs below his
        BED_MESH_PROFILE LOAD=<BED_MESH_PLA>   # i.e. load the bed mesh profile saved after using RUN_ABL_BED_60
	{% endif %}
    {% if bedTemp >= 70 %}            # If printing PETG, do these things... If printing other materials also, put equivalent higher temp ifs below his
        BED_MESH_PROFILE LOAD=<BED_MESH_PETG>   # i.e. load the bed mesh profile saved after using RUN_ABL_BED_80
	{% endif %}

	G28 X Y                                # Home X&Y axes. 
    # Ignore Z height until PrintBed is at Target Temp. 
    # Saves time by eliminating a redundant homing & reduces the risk of forgetting to clear any residue off the cold nozzle before STABLE_Z_HOME starts.

# move to the left front corner and wait until the bed is within 10 deg of target then heat the hotend
	G90
	#G0 Z20
	#G0 X0 Y0 F3000
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bedTemp}
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bedTemp-2} MAXIMUM={bedTemp}
    #Specifying both min and max also covers those cases where a print is started while the bed is above the target temperature

#Home with a cold nozzle (avoids any drool getting trapped between nozzle and bed while probing, as long as nozzle has been cleaned while waiting for bed to heat up...)
    STABLE_Z_HOME

# Return to left front corner after homing Z 
    G0 Z20
	G0 X0 Y0 F3000
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={toolTemp}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={toolTemp-2} MAXIMUM={toolTemp} # Wait for extruder to achieve between target print temperature and target-2 degC. 
    #M109 S{toolTemp}  # Waited forever for extruder to achieve target print temperature !?
    #Specifying both min and max also covers those cases where a print is started while the nozzle is above the target temperature

	# And we can now draw our purge line
	G92 E0 								#Reset Extruder
	G1 Z2.0 F3000 						#Move Z Axis up
	G1 X0 Y20 Z0.28						#Move to start position
	G1 X0 Y200.0 Z0.28 E15   			#Draw the first line
	G1 X0 Y200.0 Z0.28 					#Move to side a little
	G1 X0.5 Y20 Z0.28 E30 				#Draw the second line
	G92 E0 								#Reset Extruder
	G1 Z2.0 F3000 						#Move Z Axis up

[gcode_macro END_PRINT]
# Put the following in the Cura end code and remove everything else:
# END_PRINT
description: Cool hotend, present print, heaters off, retract filament a bit, Fans off when temps below 50C
gcode:
	M106 S255 ;full fan
	G91 ;Relative positioning
	G1 E-0.5 F2700 ;Retract a bit
	G1 E-0.5 Z0.2 F2400 ;Retract and raise Z
	G1 X5 Y5 F5000 ;Wipe out
	G1 Z10 ;Raise Z more
	G90 ;Absolute positioning
	G1 X0 Y225 ;Present print
	TURN_OFF_HEATERS
	G91 ;Relative positioning
	G4 S30
	G1 E-0.5 F2700 ; retract a bit more after cooling for 30 seconds about 20 degrees
	G4 S30
	G1 E-0.5 F2700 ; retract a bit more after cooling for 30 seconds about 20 degrees
	G90 ;Absolute positioning
	M84 X Y E ;Disable all steppers but Z
	M82 ;absolute extrusion mode
	TEMPERATURE_WAIT SENSOR=extruder MAXIMUM=50  ##Use part cooling fan to help cool nozzle after print
	M106 S0 ;Turn-off part cooling 

[gcode_macro LOAD_FILAMENT]
description:  MUST HEAT NOZZLE BEFORE RUNNING THIS. Ensures Z>=30mm. Loads filament, then retracts 0.5mm.
gcode:
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < 30.0 %}
    G0 Z30
  {% endif %}
  SAVE_GCODE_STATE NAME=before_load_filament_state
  M83                            ; set extruder to relative
  G1 E45 F1000                  ; quickly load filament set for direct drive, for bowden set to E280
  G1 E30 F300                    ; slower extrusion for hotend path
  G1 E50 F150                    ; prime nozzle with filament
  #TURN_OFF_HEATERS
  G1 E-0.5 F500						; retract a bit
  #G1 E-1 F5						; retract a bit
  #M82                            ; set extruder to absolute
  RESTORE_GCODE_STATE NAME=before_load_filament_state

[gcode_macro UNLOAD_FILAMENT]
description: MUST HEAT NOZZLE BEFORE RUNNING THIS. Ensures Z>=30mm. Pushes a little out, then retracts all.
gcode:
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < 30.0 %}
	G0 Z30
  {% endif %}
  SAVE_GCODE_STATE NAME=before_unload_filament_state
  M83                            ; set extruder to relative
  G1 E5 F300                    ; extrude a little to soften tip
  G1 E-100 F1000                 ; retract filament completely, set to E380 for Bowden
  #M82                            ; set extruder to absolute
  RESTORE_GCODE_STATE NAME=before_unload_filament_state

[gcode_macro Hotend_Cleaning]
description: MUST HEAT NOZZLE BEFORE RUNNING THIS. Just pushes filament in, extrudes some, then retracts all
gcode:
    SAVE_GCODE_STATE NAME=before_hot_end_cleaning_state
    M83                            ; set extruder to relative
    G1 E45 F1000                  ; quickly load filament set for direct drive, for bowden set to E280
    G1 E30 F300                    ; slower extrusion for hotend path
    G1 E50 F150                    ; prime nozzle with filament
    G1 E-100 F1000                 ; retract filament completely, set to E380 for Bowden
    #M82                            ; set extruder to absolute
    RESTORE_GCODE_STATE NAME=before_hot_end_cleaning_state

[gcode_macro M204]
rename_existing: M204.1
gcode:
	{% if params.S is defined %}
		{% set s = params.S|float %}
		SET_VELOCITY_LIMIT ACCEL={s} ACCEL_TO_DECEL={s/2}
	{% endif %}

[gcode_macro M900]
gcode:
	{% if params.K is defined %}
		{% set K = params.K|float %}
		SET_PRESSURE_ADVANCE ADVANCE={K}
	{% endif %}

##################################################################################################
# Button State Detection Macro (e.g. Optical Switch?)  NOTE: This macro is not used at the moment. 
# It was too slow to meet my needs to configure the Optical Switch to TARE the nozzle probe.
# Keeping it here purely to save me having to find it again, in case I think of a use for it.
#################################################################################################

# Execute gcode when a button is pressed or released (or when a pin changes state).
# Example: You can check the state of the button "my_gcode_button" by using:
#    QUERY_BUTTON button=my_gcode_button

#[gcode_button my_gcode_button]
#pin: !PC2
#   The pin on which the button my_gcode_button is connected. This parameter must be
#   provided.
#press_gcode:
#   A list of G-Code commands to execute when the button is pressed.
#   G-Code templates are supported.
# TARE_PROBE
#release_gcode:
#   A list of G-Code commands to execute when the button is released.
#   G-Code templates are supported.

#####################################################
############   END OF   MACROS   ####################
#####################################################