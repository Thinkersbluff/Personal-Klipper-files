# This file contains common pin mappings for the BIGTREETECH SKR E3 Turbo motherboard.
# To use this config, the firmware.bin should be compiled for the LPC1769 CPU.

[include mainsail.cfg]
[include MACROS.cfg]
[include InputShaper.cfg]

# per Kevin's comment on https://github.com/Klipper3d/klipper/issues/3549
# this section prevents TMC read errors due to the drivers being in STANDBY mode
[static_digital_output tmc_standby_pins]
pins: !P3.26, !P3.25, !P1.18, !P1.19, !P2.13

#See https://www.klipper3d.org/Config_Reference.html for an explanation of these settings

[stepper_x]
step_pin: P1.4
dir_pin: !P1.8
enable_pin: !P1.0
microsteps: 16
rotation_distance: 40
endstop_pin: ^P1.29
position_endstop: -4
position_min: -4
position_max: 270
homing_speed: 50

[tmc2209 stepper_x]
uart_pin: P1.1
#diag_pin: P1.29
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 9999

[stepper_y]
step_pin: P1.14
dir_pin: !P1.15
enable_pin: !P1.9
microsteps: 16
rotation_distance: 20
endstop_pin: ^P1.28
position_endstop: 0
position_min: 0
position_max: 235
homing_speed: 50

[tmc2209 stepper_y]
uart_pin: P1.10
#diag_pin: P1.28
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 9999

[stepper_z]
step_pin: P4.29
dir_pin: P4.28
enable_pin: !P1.16
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_max: 250
position_min: -1

[tmc2209 stepper_z]
uart_pin: P1.17
#diag_pin: P1.27
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 9999

[stepper_z1]
step_pin: P2.11
dir_pin: P2.12
enable_pin: !P0.21
microsteps: 16
rotation_distance: 8

[tmc2209 stepper_z1]
uart_pin: P0.22
#diag_pin: P1.25
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 9999

[extruder]
step_pin: P2.6
dir_pin: P2.7
enable_pin: !P0.4
microsteps: 16
rotation_distance: 24.242
nozzle_diameter: 0.400
filament_diameter: 1.750
#pressure_advance: 0.0
#pressure_advance_lookahead_time: 0.010
heater_pin: P2.3
sensor_type: EPCOS 100K B57560G104F
sensor_pin: P0.24
control: pid
pid_Kp: 21.527
pid_Ki: 1.063
pid_Kd: 108.982
min_temp: 0
max_temp: 280
max_extrude_only_distance: 600
max_extrude_only_velocity: 150

[tmc2209 extruder]
uart_pin: P0.5
#diag_pin: P1.26
run_current: 0.650
stealthchop_threshold: 999999

# NOTE: The BTT SKR e3 Turbo board includes a TMC2209 driver for a fifth stepper motor (e.g. for a 2nd extruder or a 2nd Z motor)
# I use that fifth output as stepper_z1 instead, so have not completed these entries:
#[extruder1]
#step_pin: P2.11
#dir_pin: P2.12
#enable_pin: !P0.21
#heater_pin: P2.4
#sensor_pin: P0.23
#...

#[tmc2209 extruder1]
#uart_pin: P0.22
##diag_pin: P1.25
#...

[heater_bed]
heater_pin: P2.5
sensor_type: ATC Semitec 104GT-2
sensor_pin: P0.25
control: pid
pid_Kp: 54.027
pid_Ki: 0.770
pid_Kd: 948.182
min_temp: 0
max_temp: 130

[fan]
pin: P2.1

[heater_fan nozzle_cooling_fan]
pin: P2.2

# You will need to edit the serial: line to enter the correct address for your printer, after flashing firmware.bin to the motherboard
[mcu]
serial: /dev/serial/by-id/usb-Klipper_lpc1769_0680000AA49869AF11F23E5EC12000F5-if00
baud: 115200
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=P2.8,  EXP1_3=P0.19, EXP1_5=P0.20, EXP1_7=P0.17, EXP1_9=<GND>,
    EXP1_2=P0.16, EXP1_4=<RST>, EXP1_6=P0.15, EXP1_8=P0.18, EXP1_10=<5V>

# From the sample-lcd.cfg file for definitions of common LCD displays:
######################################################################
# 128x64 Full Graphic Creality CR10 / ENDER 3 stockdisplay
######################################################################

# This section is used for a Creality "12864" display with a single
# ribbon cable between the display's EXP3 plug and the
# micro-controller board's EXP1 connector.

[display]
lcd_type: st7920
cs_pin: EXP1_7
sclk_pin: EXP1_6
sid_pin: EXP1_8
encoder_pins: ^EXP1_5, ^EXP1_3
click_pin: ^!EXP1_2

[output_pin BEEPER_pin]
# Used by [gcode_macro M300]
pin: EXP1_1
pwm: True
#   A piezo beeper needs a PWM signal, a DC buzzer doesn't.
value: 0
#   Silent at power on, set to 1 if active low.
shutdown_value: 0
#   Disable at emergency shutdown (no PWM would be available anyway).
cycle_time: 0.001
#   Default PWM frequency : 0.001 = 1ms will give a tone of 1kHz
#   Although not pitch perfect.


####################################################################
# Added for use of BLTouch as the Z_Min bed detector and ABL probe #
####################################################################

[bltouch]
sensor_pin: ^P1.27
control_pin: P1.23
pin_move_time: 0.680
#   The amount of time (in seconds) to wait for the BLTouch pin to
#   move up or down. The default is 0.680 seconds.
stow_on_each_sample: True
#   This determines if Klipper should command the pin to move up
#   between each probe attempt when performing a multiple probe
#   sequence. Read the directions in docs/BLTouch.md before setting
#   this to False. The default is True.
probe_with_touch_mode: False
#   If this is set to True then Klipper will probe with the device in
#   "touch_mode". The default is False (probing in "pin_down" mode).
pin_up_reports_not_triggered: True
#   Set if the BLTouch consistently reports the probe in a "not
#   triggered" state after a successful "pin_up" command. This should
#   be True for all genuine BLTouch devices. Read the directions in
#   docs/BLTouch.md before setting this to False. The default is True.
pin_up_touch_mode_reports_triggered: True
#   Set if the BLTouch consistently reports a "triggered" state after
#   the commands "pin_up" followed by "touch_mode". This should be
#   True for all genuine BLTouch devices. Read the directions in
#   docs/BLTouch.md before setting this to False. The default is True.
set_output_mode: 5V
#   Request a specific sensor pin output mode on the BLTouch V3.0 (and
#   later). This setting should not be used on other types of probes.
#   Set to "5V" to request a sensor pin output of 5 Volts (only use if
#   the controller board needs 5V mode and is 5V tolerant on its input
#   signal line). Set to "OD" to request the sensor pin output use
#   open drain mode. The default is to not request an output mode.
x_offset:-47
y_offset:+6
z_offset:2.2
speed:5.0
samples:1
sample_retract_dist:5
samples_result:average
samples_tolerance:0.100
#samples_tolerance_retries:
#   See the "probe" section for information on these parameters.

[safe_z_home]
home_xy_position: 159,120 # Change coordinates to the center of your print bed
speed: 80
z_hop: 10                 # Move up 10mm
z_hop_speed: 10

#[bed_screws]
#screw1: 20,20
#   The X,Y coordinate of the first bed leveling screw. This is a
#   position to command the nozzle to that is directly above the bed
#   screw (or as close as possible while still being above the bed).
#   This parameter must be provided.
#screw1_name:Front-Left
#   An arbitrary name for the given screw. This name is displayed when
#   the helper script runs. The default is to use a name based upon
#   the screw XY location.
#screw1_fine_adjust:
#   An X,Y coordinate to command the nozzle to so that one can fine
#   tune the bed leveling screw. The default is to not perform fine
#   adjustments on the bed screw.
#screw2: 215,215
#screw2_name: Back-Right
#screw3: 20,215
#screw4_name: Back-Left
#screw4: 215,20
#horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   when moving from one screw location to the next. The default is 5.
#probe_height: 0
#   The height of the probe (in mm) after adjusting for the thermal
#   expansion of bed and nozzle. The default is zero.
#speed: 50
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
#probe_speed: 5
#   The speed (in mm/s) when moving from a horizontal_move_z position
#   to a probe_height position. The default is 5.

[screws_tilt_adjust]
screw1: 74, 45
screw1_name: front left screw
screw2: 247, 45
screw2_name: front right screw
screw3: 247, 206
screw3_name: rear right screw
screw4: 74, 206
screw4_name: rear left screw
horizontal_move_z: 10.
speed: 50.
screw_thread: CW-M3

[bed_mesh]
speed: 100
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
mesh_min: 10,20
#   Defines the minimum x,y coordinate of the mesh for rectangular
#   beds. This coordinate is relative to the probe's location. This
#   will be the first point probed, nearest to the origin. This
#   parameter must be provided for rectangular beds.
mesh_max: 220,220
#   Defines the maximum x,y coordinate of the mesh for rectangular
#   beds. Adheres to the same principle as mesh_min, however this will
#   be the furthest point probed from the bed's origin. This parameter
#   must be provided for rectangular beds.
probe_count: 5,5
#   For rectangular beds, this is a comma separate pair of integer
#   values (X,Y) defining the number of points to probe along each
#   axis. A single value is also valid, in which case that value will
#   be applied to both axes. Default is 3,3.
#fade_start: 1.0
#   The gcode z position in which to start phasing out z-adjustment
#   when fade is enabled. Default is 1.0.
#fade_end: 0.0
#   The gcode z position in which phasing out completes. When set to a
#   value below fade_start, fade is disabled. It should be noted that
#   fade may add unwanted scaling along the z-axis of a print. If a
#   user wishes to enable fade, a value of 10.0 is recommended.
#   Default is 0.0, which disables fade.
#fade_target:
#   The z position in which fade should converge. When this value is
#   set to a non-zero value it must be within the range of z-values in
#   the mesh. Users that wish to converge to the z homing position
#   should set this to 0. Default is the average z value of the mesh.
split_delta_z: .015
#   The amount of Z difference (in mm) along a move that will trigger
#   a split. Default is .025.
move_check_distance: 5.0
#   The distance (in mm) along a move to check for split_delta_z.
#   This is also the minimum length that a move can be split. Default
#   is 5.0.
mesh_pps: 2,2
#   A comma separated pair of integers (X,Y) defining the number of
#   points per segment to interpolate in the mesh along each axis. A
#   "segment" can be defined as the space between each probed point.
#   The user may enter a single value which will be applied to both
#   axes. Default is 2,2.
algorithm: bicubic
#   The interpolation algorithm to use. May be either "lagrange" or
#   "bicubic". This option will not affect 3x3 grids, which are forced
#   to use lagrange sampling. Default is lagrange.
bicubic_tension: .2
#   When using the bicubic algorithm the tension parameter above may
#   be applied to change the amount of slope interpolated. Larger
#   numbers will increase the amount of slope, which results in more
#   curvature in the mesh. Default is .2.
relative_reference_index:13
#   A point index in the mesh to reference all z values to. Enabling
#   this parameter produces a mesh relative to the probed z position
#   at the provided index.
#faulty_region_1_min:
#faulty_region_1_max:
#   Optional points that define a faulty region.  See docs/Bed_Mesh.md
#   for details on faulty regions.  Up to 99 faulty regions may be added.
#   By default no faulty regions are set.




########################
#  ENABLE ARC SUPPORT  #
########################
[gcode_arcs]
resolution: 1.0
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.

####################################
#  ENABLE exclude_object function  #
####################################
[exclude_object]

####################
# PUT MACROS HERE  # e.g. see https://github.com/albertogg/klipper-config/blob/main/ender-3/printer.cfg
####################

[gcode_macro G29] #Perform ABL
gcode:
    BED_MESH_CALIBRATE

#####################
#   LEVELING MENU   # None defined. The Klipper firmware.bin provides all of the menus I need, on my OEM LCD display
#####################


##### NOTE: DELETE THIS LINE AND EVERYTHING BELOW HERE, WHEN CONFIGURING A NEW SYSTEM! #####
##### ALSO REMOVE COMMENTS FROM THE ABOVE SETTINGS BEING OVERRIDDEN BELOW! #####
##### THEN CALIBRATE YOUR OWN PRINTER (i.e. PID both heaters & run PROBE_CALIBRATE) #####

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.380000, 0.335000, 0.297500, 0.307500, 0.502500
#*# 	0.232500, 0.170000, 0.120000, 0.115000, 0.280000
#*# 	0.147500, 0.085000, 0.017500, 0.000000, 0.155000
#*# 	0.182500, 0.125000, 0.055000, 0.015000, 0.177500
#*# 	0.332500, 0.285000, 0.230000, 0.195000, 0.360000
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 10.0
#*# max_x = 220.0
#*# min_y = 20.0
#*# max_y = 220.0
#*#
#*# [bed_mesh BED_MESH_PLA]
#*# version = 1
#*# points =
#*# 	0.105000, 0.162500, 0.165000, 0.137500, 0.205000
#*# 	0.087500, 0.130000, 0.107500, 0.067500, 0.115000
#*# 	0.060000, 0.090000, 0.050000, 0.000000, 0.047500
#*# 	0.075000, 0.107500, 0.062500, -0.010000, 0.045000
#*# 	0.115000, 0.160000, 0.132500, 0.075000, 0.132500
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 10.0
#*# max_x = 220.0
#*# min_y = 20.0
#*# max_y = 220.0
#*#
#*# [bed_mesh BED_MESH_PETG]
#*# version = 1
#*# points =
#*# 	  0.020000, 0.110000, 0.125000, 0.097500, 0.145000
#*# 	  0.040000, 0.110000, 0.100000, 0.060000, 0.085000
#*# 	  0.022500, 0.075000, 0.050000, 0.000000, 0.022500
#*# 	  0.032500, 0.087500, 0.055000, -0.015000, 0.017500
#*# 	  0.042500, 0.117500, 0.107500, 0.050000, 0.090000
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 10.0
#*# max_x = 220.0
#*# min_y = 20.0
#*# max_y = 220.0
